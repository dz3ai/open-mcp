import { z } from "zod"

export const toolName = `post_orders`
export const toolDescription = `Create order`
export const baseUrl = `https://uk.api.just-eat.io`
export const path = `/orders`
export const method = `post`
export const security = []

export const inputParams = z.object({ "header": z.object({ "x-je-api-version": z.number().describe("The api version to use. Version 2.0 is the only available version.") }).optional(), "body": z.object({ "Customer": z.object({ "Address": z.object({ "City": z.string(), "GeoLocation": z.object({ "Latitude": z.number(), "Longitude": z.number() }).optional(), "Lines": z.array(z.string()), "PostalCode": z.string() }), "DisplayPhoneNumber": z.string().describe("If you implement phone masking provide a masked number here").optional(), "Email": z.string().optional(), "Name": z.string(), "PhoneNumber": z.string().describe("The customer's real phone number") }), "CustomerNotes": z.object({ "NoteForDelivery": z.string().optional(), "NoteForRestaurant": z.string().optional() }).optional(), "FriendlyOrderReference": z.string().optional(), "Fulfilment": z.object({ "DueAsap": z.boolean().describe("If food should be delivered ASAP").optional(), "DueDate": z.string().datetime({ offset: true }).describe("The time the customer expects the food. Time must be in the future"), "Method": z.enum(["Delivery","Collection"]) }), "IsTest": z.boolean().optional(), "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.string().optional(), "Name": z.string().optional(), "Quantity": z.string().optional(), "Reference": z.string().optional(), "UnitPrice": z.string().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string(), "Quantity": z.number().int().gte(1), "Reference": z.string().describe("The item's ID that you hold"), "TotalPrice": z.number().describe("Price of this item x quantity and all sub items"), "UnitPrice": z.number().int().optional() })), "OrderReference": z.string(), "Payment": z.object({ "Fees": z.array(z.object({ "Type": z.string().optional(), "Value": z.number().optional() })).optional(), "Lines": z.array(z.object({ "LastCardDigits": z.string().optional(), "Paid": z.boolean().optional(), "ServiceFee": z.number().optional(), "Type": z.enum(["Cash","Card","AccountCredit","Voucher"]), "Value": z.number().optional() })), "PaidDate": z.string().datetime({ offset: true }).optional(), "Taxes": z.array(z.object({ "Percentage": z.number(), "Type": z.string(), "Value": z.number() })).optional(), "Tips": z.array(z.object({ "Type": z.string().optional(), "Value": z.number().optional() })).optional() }), "Restaurant": z.object({ "Id": z.number().int().describe("Our restaurant ID").optional() }), "TotalPrice": z.number() }).optional() }).shape