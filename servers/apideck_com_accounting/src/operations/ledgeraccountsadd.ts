import { z } from "zod"

export const toolName = `ledgeraccountsadd`
export const toolDescription = `Create Ledger Account`
export const baseUrl = `https://unify.apideck.com`
export const path = `/accounting/ledger-accounts`
export const method = `post`
export const security = [
  {
    "key": "Authorization",
    "value": "<mcp-env-var>AUTHORIZATION</mcp-env-var>",
    "in": "header",
    "envVarName": "AUTHORIZATION",
    "schemeType": "apiKey",
    "schemeName": "Authorization"
  }
]

export const inputParams = z.object({ "query": z.object({ "raw": z.boolean().describe("Include raw response. Mostly used for debugging purposes") }).optional(), "header": z.object({ "x-apideck-consumer-id": z.string().describe("ID of the consumer which you want to get or push data from"), "x-apideck-app-id": z.string().describe("The ID of your Unify application"), "x-apideck-service-id": z.string().describe("Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.").optional() }).optional(), "body": z.object({ "active": z.boolean().nullable().describe("Whether the account is active or not.").optional(), "bank_account": z.object({ "account_name": z.string().nullable().describe("The name which you used in opening your bank account.").optional(), "account_number": z.string().nullable().describe("A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.").optional(), "account_type": z.enum(["bank_account","credit_card","other"]).nullable().describe("The type of bank account.").optional(), "bank_code": z.string().nullable().describe("A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.").optional(), "bic": z.string().nullable().optional(), "branch_identifier": z.string().nullable().describe("A branch identifier is a unique identifier for a branch of a bank or financial institution.").optional(), "bsb_number": z.string().nullable().describe("A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.").optional(), "currency": z.enum(["UNKNOWN_CURRENCY","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRC","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","USS","UYI","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XTS","XXX","YER","ZAR","ZMK","ZMW","BTC","ETH"]).nullable().describe("Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).").optional(), "iban": z.string().nullable().optional() }).strict().optional(), "categories": z.array(z.object({ "id": z.string().readonly().optional(), "name": z.string().describe("The name of the category.").readonly().optional() })).describe("The categories of the account.").readonly().optional(), "classification": z.enum(["asset","equity","expense","liability","revenue","income","other_income","other_expense","costs_of_sales"]).nullable().describe("The classification of account.").optional(), "code": z.string().nullable().describe("The code assigned to the account.").optional(), "created_at": z.string().datetime({ offset: true }).describe("The date and time when the object was created.").readonly().optional(), "created_by": z.string().nullable().describe("The user who created the object.").readonly().optional(), "currency": z.enum(["UNKNOWN_CURRENCY","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRC","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","USS","UYI","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XTS","XXX","YER","ZAR","ZMK","ZMW","BTC","ETH"]).nullable().describe("Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).").optional(), "current_balance": z.number().nullable().describe("The current balance of the account.").optional(), "description": z.string().nullable().describe("The description of the account.").optional(), "display_id": z.string().describe("The human readable display ID used when displaying the account").optional(), "fully_qualified_name": z.string().nullable().describe("The fully qualified name of the account.").optional(), "header": z.boolean().nullable().describe("Whether the account is a header or not.").optional(), "id": z.string().describe("A unique identifier for an object.").readonly().optional(), "last_reconciliation_date": z.string().date().nullable().describe("Reconciliation Date means the last calendar day of each Reconciliation Period.").optional(), "level": z.number().nullable().optional(), "name": z.string().nullable().describe("The name of the account.").optional(), "opening_balance": z.number().nullable().describe("The opening balance of the account.").optional(), "parent_account": z.object({ "display_id": z.string().describe("The human readable display ID used when displaying the parent account").optional(), "id": z.string().describe("The ID of the parent account.").optional(), "name": z.string().describe("The name of the parent account.").optional() }).optional(), "row_version": z.string().nullable().describe("A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.").optional(), "status": z.enum(["active","inactive","archived"]).nullable().describe("The status of the account.").optional(), "sub_account": z.boolean().nullable().describe("Whether the account is a sub account or not.").optional(), "sub_accounts": z.array(z.any()).describe("The sub accounts of the account.").readonly().optional(), "sub_type": z.string().nullable().describe("The sub type of account.").optional(), "tax_rate": z.object({ "code": z.string().nullable().describe("Tax rate code").readonly().optional(), "id": z.string().nullable().describe("The ID of the object.").optional(), "name": z.string().nullable().describe("Name of the tax rate").readonly().optional(), "rate": z.number().nullable().describe("Rate of the tax rate").readonly().optional() }).optional(), "tax_type": z.string().nullable().describe("The tax type of the account.").optional(), "type": z.enum(["accounts_receivable","revenue","sales","other_income","bank","current_asset","fixed_asset","non_current_asset","other_asset","balancesheet","equity","expense","other_expense","costs_of_sales","accounts_payable","credit_card","current_liability","non_current_liability","other_liability"]).describe("The type of account.").optional(), "updated_at": z.string().datetime({ offset: true }).nullable().describe("The date and time when the object was last updated.").readonly().optional(), "updated_by": z.string().nullable().describe("The user who last updated the object.").readonly().optional() }).catchall(z.any()).optional() }).shape