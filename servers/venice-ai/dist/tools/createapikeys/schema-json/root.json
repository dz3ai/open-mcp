{
  "type": "object",
  "properties": {
    "description": {
      "type": "string",
      "description": "The API Key description",
      "example": "Example API Key"
    },
    "apiKeyType": {
      "type": "string",
      "enum": [
        "ADMIN",
        "INFERENCE"
      ],
      "description": "The API Key type. Admin keys have full access to the API while inference keys are only able to call inference endpoints.",
      "example": "ADMIN"
    },
    "expiresAt": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            ""
          ]
        },
        {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
        },
        {
          "type": "string",
          "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{3})?Z$"
        }
      ],
      "description": "The API Key expiration date. If not provided, the key will not expire.",
      "example": "2023-10-01T12:00:00Z"
    },
    "consumptionLimit": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `consumptionLimit` to the tool, first call the tool `expandSchema` with \"/properties/consumptionLimit\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The API Key consumption limits for each epoch.</property-description>",
      "additionalProperties": true
    }
  },
  "required": [
    "description",
    "apiKeyType",
    "consumptionLimit"
  ]
}