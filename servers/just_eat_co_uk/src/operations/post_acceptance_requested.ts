import { z } from "zod"

export const toolName = `post_acceptance_requested`
export const toolDescription = `Acceptance requested`
export const baseUrl = `https://uk.api.just-eat.io`
export const path = `/acceptance-requested`
export const method = `post`
export const security = []

export const inputParams = z.object({ "body": z.object({ "Currency": z.string().optional(), "Customer": z.object({ "Id": z.number().nullable().optional(), "Name": z.string().optional(), "PreviousRestaurantOrderCount": z.number().describe("The customer's previous total number of orders made to this restaurant").optional(), "PreviousTotalOrderCount": z.number().describe("The customer's previous total number of orders made to all restaurants").optional() }).optional(), "CustomerNotes": z.record(z.string()).optional(), "FriendlyOrderReference": z.string().optional(), "Fulfilment": z.object({ "Address": z.object({ "City": z.string().optional(), "Geolocation": z.object({ "Latitude": z.number().optional(), "Longitude": z.number().optional() }).optional(), "Lines": z.array(z.string()).optional(), "PostalCode": z.string().optional() }).optional(), "CustomerDueAsap": z.boolean().optional(), "CustomerDueDate": z.string().datetime({ offset: true }).optional(), "Method": z.enum(["Delivery","Collection"]).optional(), "PhoneMaskingCode": z.string().describe("Code to use when calling customer phone masking number about this order. null if phone masking not enabled").optional(), "PhoneNumber": z.string().describe("Customer phone number (will be phone masking number if enabled)").optional(), "PreparationTime": z.string().optional() }).optional(), "IsTest": z.boolean().optional(), "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.string().optional(), "Name": z.string().optional(), "Quantity": z.string().optional(), "Reference": z.string().optional(), "TotalPrice": z.string().optional(), "UnitPrice": z.string().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().optional(), "Reference": z.string().optional(), "TotalPrice": z.number().optional(), "UnitPrice": z.number().optional() })).optional(), "OrderId": z.string().optional(), "Payment": z.object({ "Lines": z.array(z.object({ "Paid": z.boolean().optional(), "Type": z.string().optional(), "Value": z.number().optional() })).optional() }).optional(), "PlacedDate": z.string().datetime({ offset: true }).optional(), "PriceBreakdown": z.object({ "Discount": z.number().nullable().optional(), "Fees": z.object({ "Delivery": z.number().nullable().optional(), "Other": z.number().nullable().optional(), "ServiceCharge": z.number().nullable().optional() }).optional(), "Items": z.number().nullable().optional(), "Taxes": z.number().nullable().optional(), "Tips": z.number().nullable().optional() }).optional(), "Restaurant": z.object({ "Address": z.object({ "City": z.string().optional(), "Geolocation": z.object({ "Latitude": z.number().optional(), "Longitude": z.number().optional() }).optional(), "Lines": z.array(z.string()).optional(), "PostalCode": z.string().optional() }).optional(), "Id": z.string().describe("Restaurant Id").optional(), "Name": z.string().optional(), "PhoneNumber": z.string().optional(), "Reference": z.string().optional(), "TimeZone": z.string().optional() }).optional(), "Restrictions": z.array(z.object({ "Type": z.literal("Alcohol").describe("The type of restricted item contained in the order. The only supported value is 'Alcohol'.").optional() })).describe("This is a list of types of restricted items contained in the order.").optional(), "TotalPrice": z.number().optional() }).optional() }).shape