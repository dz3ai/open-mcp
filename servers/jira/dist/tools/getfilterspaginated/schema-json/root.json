{
  "type": "object",
  "properties": {
    "filterName": {
      "description": "String used to perform a case-insensitive partial match with `name`.",
      "type": "string"
    },
    "accountId": {
      "description": "User account ID used to return filters with the matching `owner.accountId`. This parameter cannot be used with `owner`.",
      "maxLength": 128,
      "minLength": 0,
      "type": "string"
    },
    "owner": {
      "description": "This parameter is deprecated because of privacy changes. Use `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return filters with the matching `owner.name`. This parameter cannot be used with `accountId`.",
      "type": "string"
    },
    "groupname": {
      "description": "As a group's name can change, use of `groupId` is recommended to identify a group. Group name used to returns filters that are shared with a group that matches `sharePermissions.group.groupname`. This parameter cannot be used with the `groupId` parameter.",
      "type": "string"
    },
    "groupId": {
      "description": "Group ID used to returns filters that are shared with a group that matches `sharePermissions.group.groupId`. This parameter cannot be used with the `groupname` parameter.",
      "type": "string"
    },
    "projectId": {
      "description": "Project ID used to returns filters that are shared with a project that matches `sharePermissions.project.id`.",
      "format": "int64",
      "type": "integer"
    },
    "id": {
      "description": "The list of filter IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`. Do not exceed 200 filter IDs.",
      "items": {
        "format": "int64",
        "type": "integer"
      },
      "type": "array",
      "uniqueItems": true
    },
    "orderBy": {
      "description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.\n *  `favourite_count` Sorts by the count of how many users have this filter as a favorite.\n *  `is_favourite` Sorts by whether the filter is marked as a favorite.\n *  `id` Sorts by filter ID.\n *  `name` Sorts by filter name.\n *  `owner` Sorts by the ID of the filter owner.\n *  `is_shared` Sorts by whether the filter is shared.",
      "default": "name",
      "enum": [
        "description",
        "-description",
        "+description",
        "favourite_count",
        "-favourite_count",
        "+favourite_count",
        "id",
        "-id",
        "+id",
        "is_favourite",
        "-is_favourite",
        "+is_favourite",
        "name",
        "-name",
        "+name",
        "owner",
        "-owner",
        "+owner",
        "is_shared",
        "-is_shared",
        "+is_shared"
      ],
      "type": "string"
    },
    "startAt": {
      "description": "The index of the first item to return in a page of results (page offset).",
      "default": 0,
      "format": "int64",
      "type": "integer"
    },
    "maxResults": {
      "description": "The maximum number of items to return per page.",
      "default": 50,
      "format": "int32",
      "type": "integer"
    },
    "expand": {
      "description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `description` Returns the description of the filter.\n *  `favourite` Returns an indicator of whether the user has set the filter as a favorite.\n *  `favouritedCount` Returns a count of how many users have set this filter as a favorite.\n *  `jql` Returns the JQL query that the filter uses.\n *  `owner` Returns the owner of the filter.\n *  `searchUrl` Returns a URL to perform the filter's JQL query.\n *  `sharePermissions` Returns the share permissions defined for the filter.\n *  `editPermissions` Returns the edit permissions defined for the filter.\n *  `isWritable` Returns whether the current user has permission to edit the filter.\n *  `approximateLastUsed` \\[Experimental\\] Returns the approximate date and time when the filter was last evaluated.\n *  `subscriptions` Returns the users that are subscribed to the filter.\n *  `viewUrl` Returns a URL to view the filter.",
      "type": "string"
    },
    "overrideSharePermissions": {
      "description": "EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be returned. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
      "default": false,
      "type": "boolean"
    },
    "isSubstringMatch": {
      "description": "When `true` this will perform a case-insensitive substring match for the provided `filterName`. When `false` the filter name will be searched using [full text search syntax](https://support.atlassian.com/jira-software-cloud/docs/search-for-issues-using-the-text-field/).",
      "default": false,
      "type": "boolean"
    }
  },
  "required": []
}