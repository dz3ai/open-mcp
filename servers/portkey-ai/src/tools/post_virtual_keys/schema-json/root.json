{
  "type": "object",
  "properties": {
    "name": {
      "type": "string"
    },
    "provider": {
      "type": "string",
      "enum": [
        "openai",
        "azure-openai",
        "ai21",
        "anthropic",
        "anyscale",
        "azure-openai",
        "bedrock",
        "cohere",
        "deepinfra",
        "fireworks-ai",
        "google",
        "groq",
        "hugging-face",
        "jina",
        "lingyi",
        "mistral-ai",
        "monsterapi",
        "moonshot",
        "nomic",
        "novita-ai",
        "open-ai",
        "openrouter",
        "palm",
        "perplexity-ai",
        "predibase",
        "reka-ai",
        "segmind",
        "stability-ai",
        "together-ai",
        "vertex-ai",
        "workers-ai",
        "zhipu"
      ]
    },
    "key": {
      "type": "string"
    },
    "note": {
      "type": "string",
      "nullable": true
    },
    "apiVersion": {
      "type": "string",
      "nullable": true
    },
    "resourceName": {
      "type": "string",
      "nullable": true
    },
    "deploymentName": {
      "type": "string",
      "nullable": true
    },
    "workspace_id": {
      "type": "string",
      "format": "uuid",
      "description": "optional, needed when using organisation admin API keys"
    },
    "deploymentConfig": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "deploymentName": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "deploymentName"
        ]
      }
    },
    "usage_limits": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `usage_limits` to the tool, first call the tool `expandSchema` with \"/properties/usage_limits\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    },
    "rate_limits": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `rate_limits` to the tool, first call the tool `expandSchema` with \"/properties/rate_limits\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>",
      "additionalProperties": true
    }
  },
  "required": []
}