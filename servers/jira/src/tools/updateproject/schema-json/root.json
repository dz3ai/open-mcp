{
  "type": "object",
  "properties": {
    "projectIdOrKey": {
      "description": "The project ID or project key (case sensitive).",
      "example": "10001",
      "type": "string"
    },
    "expand": {
      "description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:\n\n *  `description` The project description.\n *  `issueTypes` The issue types associated with the project.\n *  `lead` The project lead.\n *  `projectKeys` All project keys associated with the project.",
      "type": "string"
    },
    "assigneeType": {
      "description": "The default assignee when creating issues for this project.",
      "enum": [
        "PROJECT_LEAD",
        "UNASSIGNED"
      ],
      "type": "string"
    },
    "avatarId": {
      "description": "An integer value for the project's avatar.",
      "format": "int64",
      "type": "integer"
    },
    "categoryId": {
      "description": "The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation. To remove the project category from the project, set the value to `-1.`",
      "format": "int64",
      "type": "integer"
    },
    "description": {
      "description": "A brief description of the project.",
      "type": "string"
    },
    "issueSecurityScheme": {
      "description": "The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.",
      "format": "int64",
      "type": "integer"
    },
    "key": {
      "description": "Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.",
      "type": "string"
    },
    "lead": {
      "description": "This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Cannot be provided with `leadAccountId`.",
      "type": "string"
    },
    "leadAccountId": {
      "description": "The account ID of the project lead. Cannot be provided with `lead`.",
      "maxLength": 128,
      "type": "string"
    },
    "name": {
      "description": "The name of the project.",
      "type": "string"
    },
    "notificationScheme": {
      "description": "The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.",
      "format": "int64",
      "type": "integer"
    },
    "permissionScheme": {
      "description": "The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.",
      "format": "int64",
      "type": "integer"
    },
    "releasedProjectKeys": {
      "description": "Previous project keys to be released from the current project. Released keys must belong to the current project and not contain the current project key",
      "items": {
        "type": "string"
      },
      "type": "array",
      "uniqueItems": true
    },
    "url": {
      "description": "A link to information about this project, such as project documentation",
      "type": "string"
    }
  },
  "required": [
    "projectIdOrKey"
  ]
}