import { z } from "zod"

export const toolName = `updatedeviceapplianceuplinkssettings`
export const toolDescription = `Update the uplink settings for an MX appliance`
export const baseUrl = `https://api.meraki.com/api/v1`
export const path = `/devices/{serial}/appliance/uplinks/settings`
export const method = `put`
export const security = [
  {
    "key": "X-Cisco-Meraki-API-Key",
    "value": "<mcp-env-var>X_CISCO_MERAKI_API_KEY</mcp-env-var>",
    "in": "header",
    "envVarName": "X_CISCO_MERAKI_API_KEY",
    "schemeType": "apiKey",
    "schemeName": "X-Cisco-Meraki-API-Key"
  }
]

export const inputParams = z.object({ "path": z.object({ "serial": z.string() }).optional(), "body": z.object({ "interfaces": z.object({ "wan1": z.object({ "enabled": z.boolean().describe("Enable or disable the interface.").optional(), "pppoe": z.object({ "authentication": z.object({ "enabled": z.boolean().describe("Whether PPPoE authentication is enabled.").optional(), "password": z.string().describe("Password for PPPoE authentication. This parameter is not returned.").optional(), "username": z.string().describe("Username for PPPoE authentication.").optional() }).describe("Settings for PPPoE Authentication.").optional(), "enabled": z.boolean().describe("Whether PPPoE is enabled.").optional() }).describe("Configuration options for PPPoE.").optional(), "svis": z.object({ "ipv4": z.object({ "address": z.string().describe("IP address and subnet mask when in static mode.").optional(), "assignmentMode": z.enum(["dynamic","static"]).describe("The assignment mode for this SVI. Applies only when PPPoE is disabled.").optional(), "gateway": z.string().describe("Gateway IP address when in static mode.").optional(), "nameservers": z.object({ "addresses": z.array(z.string()).describe("Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.").optional() }).describe("The nameserver settings for this SVI.").optional() }).describe("IPv4 settings for static/dynamic mode.").optional(), "ipv6": z.object({ "address": z.string().describe("Static address that will override the one(s) received by SLAAC.").optional(), "assignmentMode": z.enum(["dynamic","static"]).describe("The assignment mode for this SVI. Applies only when PPPoE is disabled.").optional(), "gateway": z.string().describe("Static gateway that will override the one received by autoconf.").optional(), "nameservers": z.object({ "addresses": z.array(z.string()).describe("Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.").optional() }).describe("The nameserver settings for this SVI.").optional() }).describe("IPv6 settings for static/dynamic mode.").optional() }).describe("SVI settings by protocol.").optional(), "vlanTagging": z.object({ "enabled": z.boolean().describe("Whether VLAN tagging is enabled.").optional(), "vlanId": z.number().int().describe("The ID of the VLAN to use for VLAN tagging.").optional() }).describe("VLAN tagging settings.").optional() }).describe("WAN 1 settings.").optional(), "wan2": z.object({ "enabled": z.boolean().describe("Enable or disable the interface.").optional(), "pppoe": z.object({ "authentication": z.object({ "enabled": z.boolean().describe("Whether PPPoE authentication is enabled.").optional(), "password": z.string().describe("Password for PPPoE authentication. This parameter is not returned.").optional(), "username": z.string().describe("Username for PPPoE authentication.").optional() }).describe("Settings for PPPoE Authentication.").optional(), "enabled": z.boolean().describe("Whether PPPoE is enabled.").optional() }).describe("Configuration options for PPPoE.").optional(), "svis": z.object({ "ipv4": z.object({ "address": z.string().describe("IP address and subnet mask when in static mode.").optional(), "assignmentMode": z.enum(["dynamic","static"]).describe("The assignment mode for this SVI. Applies only when PPPoE is disabled.").optional(), "gateway": z.string().describe("Gateway IP address when in static mode.").optional(), "nameservers": z.object({ "addresses": z.array(z.string()).describe("Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.").optional() }).describe("The nameserver settings for this SVI.").optional() }).describe("IPv4 settings for static/dynamic mode.").optional(), "ipv6": z.object({ "address": z.string().describe("Static address that will override the one(s) received by SLAAC.").optional(), "assignmentMode": z.enum(["dynamic","static"]).describe("The assignment mode for this SVI. Applies only when PPPoE is disabled.").optional(), "gateway": z.string().describe("Static gateway that will override the one received by autoconf.").optional(), "nameservers": z.object({ "addresses": z.array(z.string()).describe("Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.").optional() }).describe("The nameserver settings for this SVI.").optional() }).describe("IPv6 settings for static/dynamic mode.").optional() }).describe("SVI settings by protocol.").optional(), "vlanTagging": z.object({ "enabled": z.boolean().describe("Whether VLAN tagging is enabled.").optional(), "vlanId": z.number().int().describe("The ID of the VLAN to use for VLAN tagging.").optional() }).describe("VLAN tagging settings.").optional() }).describe("WAN 2 settings.").optional() }).describe("Interface settings.") }).optional() }).shape