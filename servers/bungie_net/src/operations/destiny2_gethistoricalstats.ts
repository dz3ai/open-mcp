import { z } from "zod"

export const toolName = `destiny2_gethistoricalstats`
export const toolDescription = `Gets historical stats for indicated character.`
export const baseUrl = `https://www.bungie.net/Platform`
export const path = `/Destiny2/{membershipType}/Account/{destinyMembershipId}/Character/{characterId}/Stats/`
export const method = `get`
export const security = []

export const inputParams = z.object({ "path": z.object({ "characterId": z.number().int().describe("The id of the character to retrieve. You can omit this character ID or set it to 0 to get aggregate stats across all characters."), "destinyMembershipId": z.number().int().describe("The Destiny membershipId of the user to retrieve."), "membershipType": z.number().int().describe("A valid non-BungieNet membership type.") }).optional(), "query": z.object({ "dayend": z.string().datetime({ offset: true }).describe("Last day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.").optional(), "daystart": z.string().datetime({ offset: true }).describe("First day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request.").optional(), "groups": z.array(z.number().int().describe("If the enum value is > 100, it is a \"special\" group that cannot be queried for directly (special cases apply to when they are returned, and are not relevant in general cases)")).describe("Group of stats to include, otherwise only general stats are returned. Comma separated list is allowed. Values: General, Weapons, Medals").optional(), "modes": z.array(z.number().int().describe("For historical reasons, this list will have both D1 and D2-relevant Activity Modes in it. Please don't take this to mean that some D1-only feature is coming back!")).describe("Game modes to return. See the documentation for DestinyActivityModeType for valid values, and pass in string representation, comma delimited.").optional(), "periodType": z.number().int().describe("Indicates a specific period type to return. Optional. May be: Daily, AllTime, or Activity").optional() }).optional() }).shape