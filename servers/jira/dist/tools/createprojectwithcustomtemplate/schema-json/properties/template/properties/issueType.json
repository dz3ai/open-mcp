{
  "additionalProperties": false,
  "description": "The payload for creating issue types in a project",
  "nullable": true,
  "properties": {
    "issueTypeHierarchy": {
      "description": "Defines the issue type hierarhy to be created and used during this project creation. This will only add new levels if there isn't an existing level",
      "items": {
        "additionalProperties": false,
        "description": "The payload for creating an issue type hierarchy",
        "nullable": true,
        "properties": {
          "hierarchyLevel": {
            "description": "The hierarchy level of the issue type. 0, 1, 2, 3 .. n; Negative values for subtasks",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The name of the issue type",
            "type": "string"
          },
          "onConflict": {
            "description": "The conflict strategy to use when the issue type already exists. FAIL - Fail execution, this always needs to be unique; USE - Use the existing entity and ignore new entity parameters",
            "enum": [
              "FAIL",
              "USE",
              "NEW"
            ],
            "type": "string"
          },
          "pcri": {
            "additionalProperties": false,
            "description": "Every project-created entity has an ID that must be unique within the scope of the project creation. PCRI (Project Create Resource Identifier) is a standard format for creating IDs and references to other project entities. PCRI format is defined as follows: pcri:\\[entityType\\]:\\[type\\]:\\[entityId\\] entityType - the type of an entity, e.g. status, role, workflow type - PCRI type, either `id` - The ID of an entity that already exists in the target site, or `ref` - A unique reference to an entity that is being created entityId - entity identifier, if type is `id` - must be an existing entity ID that exists in the Jira site, if `ref` - must be unique across all entities in the scope of this project template creation",
            "example": "pcri:permissionScheme:id:10001",
            "properties": {
              "anID": {
                "type": "boolean"
              },
              "areference": {
                "type": "boolean"
              },
              "entityId": {
                "type": "string"
              },
              "entityType": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "id",
                  "ref"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "nullable": true,
      "type": "array"
    },
    "issueTypeScheme": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `issueTypeScheme` to the tool, first call the tool `expandSchema` with \"/properties/template/properties/issueType/properties/issueTypeScheme\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>The payload for creating issue type schemes</property-description>",
      "additionalProperties": true
    },
    "issueTypes": {
      "description": "Only needed if you want to create issue types, you can otherwise use the ids of issue types in the scheme configuration",
      "items": {
        "additionalProperties": false,
        "description": "The payload for creating an issue type",
        "nullable": true,
        "properties": {
          "avatarId": {
            "description": "The avatar ID of the issue type. Go to https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-avatars/\\#api-rest-api-3-avatar-type-system-get to choose an avatarId existing in Jira",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "description": "The description of the issue type",
            "nullable": true,
            "type": "string"
          },
          "hierarchyLevel": {
            "description": "The hierarchy level of the issue type. 0, 1, 2, 3 .. n; Negative values for subtasks",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "The name of the issue type",
            "type": "string"
          },
          "onConflict": {
            "description": "The conflict strategy to use when the issue type already exists. FAIL - Fail execution, this always needs to be unique; USE - Use the existing entity and ignore new entity parameters",
            "enum": [
              "FAIL",
              "USE",
              "NEW"
            ],
            "type": "string"
          },
          "pcri": {
            "additionalProperties": false,
            "description": "Every project-created entity has an ID that must be unique within the scope of the project creation. PCRI (Project Create Resource Identifier) is a standard format for creating IDs and references to other project entities. PCRI format is defined as follows: pcri:\\[entityType\\]:\\[type\\]:\\[entityId\\] entityType - the type of an entity, e.g. status, role, workflow type - PCRI type, either `id` - The ID of an entity that already exists in the target site, or `ref` - A unique reference to an entity that is being created entityId - entity identifier, if type is `id` - must be an existing entity ID that exists in the Jira site, if `ref` - must be unique across all entities in the scope of this project template creation",
            "example": "pcri:permissionScheme:id:10001",
            "properties": {
              "anID": {
                "type": "boolean"
              },
              "areference": {
                "type": "boolean"
              },
              "entityId": {
                "type": "string"
              },
              "entityType": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "id",
                  "ref"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "nullable": true,
      "type": "array"
    }
  },
  "type": "object"
}