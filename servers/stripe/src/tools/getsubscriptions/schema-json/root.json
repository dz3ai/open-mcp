{
  "type": "object",
  "properties": {
    "automatic_tax": {
      "type": "object",
      "description": "<llm-instruction>This part of the input schema is truncated. If you want to pass the property `automatic_tax` to the tool, first call the tool `expandSchema` with \"/properties/automatic_tax\" in the list of pointers. This will return the expanded input schema which you can then use in the tool call. You may have to call `expandSchema` multiple times if the schema is nested.</llm-instruction>\n<property-description>Filter subscriptions by their automatic tax settings.</property-description>",
      "additionalProperties": true
    },
    "collection_method": {
      "description": "The collection method of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`.",
      "enum": [
        "charge_automatically",
        "send_invoice"
      ],
      "type": "string"
    },
    "created": {
      "description": "Only return subscriptions that were created during the given date interval.",
      "anyOf": [
        {
          "properties": {
            "gt": {
              "type": "integer"
            },
            "gte": {
              "type": "integer"
            },
            "lt": {
              "type": "integer"
            },
            "lte": {
              "type": "integer"
            }
          },
          "title": "range_query_specs",
          "type": "object"
        },
        {
          "type": "integer"
        }
      ]
    },
    "current_period_end": {
      "description": "Only return subscriptions whose current_period_end falls within the given date interval.",
      "anyOf": [
        {
          "properties": {
            "gt": {
              "type": "integer"
            },
            "gte": {
              "type": "integer"
            },
            "lt": {
              "type": "integer"
            },
            "lte": {
              "type": "integer"
            }
          },
          "title": "range_query_specs",
          "type": "object"
        },
        {
          "type": "integer"
        }
      ]
    },
    "current_period_start": {
      "description": "Only return subscriptions whose current_period_start falls within the given date interval.",
      "anyOf": [
        {
          "properties": {
            "gt": {
              "type": "integer"
            },
            "gte": {
              "type": "integer"
            },
            "lt": {
              "type": "integer"
            },
            "lte": {
              "type": "integer"
            }
          },
          "title": "range_query_specs",
          "type": "object"
        },
        {
          "type": "integer"
        }
      ]
    },
    "customer": {
      "description": "The ID of the customer whose subscriptions will be retrieved.",
      "maxLength": 5000,
      "type": "string"
    },
    "ending_before": {
      "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
      "maxLength": 5000,
      "type": "string"
    },
    "expand": {
      "description": "Specifies which fields in the response should be expanded.",
      "items": {
        "maxLength": 5000,
        "type": "string"
      },
      "type": "array"
    },
    "limit": {
      "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
      "type": "integer"
    },
    "price": {
      "description": "Filter for subscriptions that contain this recurring price ID.",
      "maxLength": 5000,
      "type": "string"
    },
    "starting_after": {
      "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
      "maxLength": 5000,
      "type": "string"
    },
    "status": {
      "description": "The status of the subscriptions to retrieve. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Pass `ended` to find subscriptions that are canceled and subscriptions that are expired due to [incomplete payment](https://stripe.com/docs/billing/subscriptions/overview#subscription-statuses). Passing in a value of `all` will return subscriptions of all statuses. If no value is supplied, all subscriptions that have not been canceled are returned.",
      "enum": [
        "active",
        "all",
        "canceled",
        "ended",
        "incomplete",
        "incomplete_expired",
        "past_due",
        "paused",
        "trialing",
        "unpaid"
      ],
      "type": "string"
    },
    "test_clock": {
      "description": "Filter for subscriptions that are associated with the specified test clock. The response will not include subscriptions with test clocks if this and the customer parameter is not set.",
      "maxLength": 5000,
      "type": "string"
    }
  },
  "required": []
}