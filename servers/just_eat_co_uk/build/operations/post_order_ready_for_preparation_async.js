import { z } from "zod";
export const toolName = `post_order_ready_for_preparation_async`;
export const toolDescription = `Order ready for preparation (async)`;
export const baseUrl = `https://uk.api.just-eat.io`;
export const path = `/order-ready-for-preparation-async`;
export const method = `post`;
export const security = [];
export const inputParams = z.object({ "body": z.object({ "Currency": z.string().optional(), "Customer": z.object({ "Id": z.string().optional(), "Name": z.string().optional() }).optional(), "CustomerNotes": z.record(z.string()).optional(), "Fulfilment": z.object({ "Address": z.object({ "City": z.string().optional(), "Geolocation": z.object({ "Accuracy": z.number().describe("This should represent the accuracy of driver's location.").optional(), "Heading": z.number().describe("This should represent the degree of heading direction, for example, 0 is north, 90 is east.").optional(), "Latitude": z.number().describe("This should represent the latitude of the driver's location."), "Longitude": z.number().describe("This should represent the longitude of the driver's location."), "Speed": z.number().describe("This should represent the travel speed of the driver.").optional() }).describe("GeoLocation object containing latitude and longitude values.").optional(), "Lines": z.array(z.string()).optional(), "PostalCode": z.string().optional() }).optional(), "CustomerDueAsap": z.boolean().optional(), "CustomerDueDate": z.string().datetime({ offset: true }).optional(), "Method": z.enum(["Delivery", "Collection"]).optional(), "PhoneNumber": z.string().optional(), "PreparationTime": z.string().optional(), "PrepareFor": z.string().datetime({ offset: true }).optional() }).optional(), "IsTest": z.boolean().optional(), "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.array(z.object({ "Items": z.string().optional(), "Name": z.string().optional(), "Quantity": z.string().optional(), "Reference": z.string().optional(), "UnitPrice": z.string().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "Name": z.string().optional(), "Quantity": z.number().int().optional(), "Reference": z.string().optional(), "UnitPrice": z.number().int().optional() })).optional(), "OrderId": z.string().optional(), "Payment": z.object({ "Lines": z.array(z.object({ "Paid": z.boolean().optional(), "Type": z.enum(["card", "cash", "credit", "other"]).optional(), "Value": z.number().optional() })).optional() }).optional(), "PlacedDate": z.string().datetime({ offset: true }).optional(), "PriceBreakdown": z.object({ "Discount": z.number().optional(), "Fees": z.object({ "Delivery": z.number().optional(), "Other": z.number().optional(), "ServiceCharge": z.number().optional() }).optional(), "Items": z.number().optional(), "Taxes": z.number().optional(), "Tips": z.number().optional() }).optional(), "Restaurant": z.object({ "Address": z.object({ "City": z.string().optional(), "Geolocation": z.object({ "Accuracy": z.number().describe("This should represent the accuracy of driver's location.").optional(), "Heading": z.number().describe("This should represent the degree of heading direction, for example, 0 is north, 90 is east.").optional(), "Latitude": z.number().describe("This should represent the latitude of the driver's location."), "Longitude": z.number().describe("This should represent the longitude of the driver's location."), "Speed": z.number().describe("This should represent the travel speed of the driver.").optional() }).describe("GeoLocation object containing latitude and longitude values.").optional(), "Lines": z.array(z.string()).optional(), "PostalCode": z.string().optional() }).optional(), "Id": z.string().optional(), "Name": z.string().optional(), "PhoneNumber": z.string().optional(), "Reference": z.string().optional() }).optional(), "TotalPrice": z.number().optional() }).optional() }).shape;
