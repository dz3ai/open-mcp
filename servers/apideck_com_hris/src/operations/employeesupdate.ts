import { z } from "zod"

export const toolName = `employeesupdate`
export const toolDescription = `Update Employee`
export const baseUrl = `https://unify.apideck.com`
export const path = `/hris/employees/{id}`
export const method = `patch`
export const security = [
  {
    "key": "Authorization",
    "value": "<mcp-env-var>AUTHORIZATION</mcp-env-var>",
    "in": "header",
    "envVarName": "AUTHORIZATION",
    "schemeType": "apiKey",
    "schemeName": "Authorization"
  }
]

export const inputParams = z.object({ "path": z.object({ "id": z.string().describe("ID of the record you are acting upon.") }).optional(), "header": z.object({ "x-apideck-consumer-id": z.string().describe("ID of the consumer which you want to get or push data from"), "x-apideck-app-id": z.string().describe("The ID of your Unify application"), "x-apideck-service-id": z.string().describe("Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.").optional() }).optional(), "query": z.object({ "raw": z.boolean().describe("Include raw response. Mostly used for debugging purposes") }).optional(), "body": z.object({ "addresses": z.array(z.object({ "city": z.string().nullable().describe("Name of city.").optional(), "contact_name": z.string().nullable().optional(), "country": z.string().nullable().describe("country code according to ISO 3166-1 alpha-2.").optional(), "county": z.string().nullable().describe("Address field that holds a sublocality, such as a county").optional(), "email": z.string().nullable().optional(), "fax": z.string().nullable().optional(), "id": z.string().nullable().optional(), "latitude": z.string().nullable().optional(), "line1": z.string().nullable().describe("Line 1 of the address e.g. number, street, suite, apt #, etc.").optional(), "line2": z.string().nullable().describe("Line 2 of the address").optional(), "line3": z.string().nullable().describe("Line 3 of the address").optional(), "line4": z.string().nullable().describe("Line 4 of the address").optional(), "longitude": z.string().nullable().optional(), "name": z.string().nullable().optional(), "phone_number": z.string().nullable().optional(), "postal_code": z.string().nullable().describe("Zip code or equivalent.").optional(), "row_version": z.string().nullable().describe("A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.").optional(), "salutation": z.string().nullable().optional(), "state": z.string().nullable().describe("Name of state").optional(), "street_number": z.string().nullable().describe("Street number").optional(), "string": z.string().nullable().optional(), "type": z.enum(["primary","secondary","home","office","shipping","billing","other"]).optional(), "website": z.string().nullable().optional() }).strict()).optional(), "birthday": z.string().date().nullable().describe("The date of birth of the person.").optional(), "company_id": z.string().nullable().describe("The unique identifier of the company.").optional(), "company_name": z.string().nullable().describe("The name of the company.").optional(), "compensations": z.array(z.object({ "currency": z.enum(["UNKNOWN_CURRENCY","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRC","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","USS","UYI","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XTS","XXX","YER","ZAR","ZMK","ZMW","BTC","ETH"]).nullable().describe("Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).").optional(), "effective_date": z.string().describe("The date on which a change to an employee's compensation takes effect.").optional(), "flsa_status": z.enum(["exempt","salaried-nonexempt","nonexempt","owner"]).describe("The FLSA status for this compensation.").optional(), "id": z.string().describe("A unique identifier for an object.").readonly().optional(), "job_id": z.string().describe("The ID of the job to which the compensation belongs.").readonly().optional(), "payment_unit": z.enum(["hour","week","month","year","paycheck"]).describe("Unit of measurement for employee compensation.").optional(), "rate": z.number().describe("The amount paid per payment unit.").optional() })).optional(), "country_of_birth": z.string().min(2).max(2).nullable().describe("Country code according to ISO 3166-1 alpha-2.").optional(), "created_at": z.string().datetime({ offset: true }).describe("The date and time when the object was created.").readonly().optional(), "created_by": z.string().nullable().describe("The user who created the object.").readonly().optional(), "custom_fields": z.array(z.object({ "description": z.string().describe("More information about the custom field").optional(), "id": z.string(), "name": z.string().describe("Name of the custom field.").optional(), "value": z.union([z.string().nullable(), z.number().nullable(), z.boolean().nullable(), z.array(z.string())]).optional() }).strict()).optional(), "deceased_on": z.string().date().nullable().describe("The date the person deceased.").optional(), "deleted": z.boolean().nullable().optional(), "department_id": z.string().nullable().describe("Unique identifier of the department ID this employee belongs to.").optional(), "department_name": z.string().nullable().describe("Name of the department this employee belongs to.").optional(), "description": z.string().nullable().describe("A description of the object.").optional(), "dietary_preference": z.string().nullable().describe("Indicate the employee's dietary preference.").optional(), "direct_reports": z.array(z.string()).nullable().describe("The direct reports refer to the individuals who report directly to a person in the organizational hierarchy.").optional(), "display_name": z.string().nullable().describe("The name used to display the employee, often a combination of their first and last names.").optional(), "division": z.string().nullable().describe("The division the person is currently in. Usually a collection of departments or teams or regions.").optional(), "division_id": z.string().nullable().describe("Unique identifier of the division this employee belongs to.").optional(), "emails": z.array(z.object({ "email": z.string().email().min(1), "id": z.string().optional(), "type": z.enum(["primary","secondary","work","personal","billing","other"]).optional() }).strict()).optional(), "employee_number": z.string().nullable().describe("An Employee Number, Employee ID or Employee Code, is a unique number that has been assigned to each individual staff member within a company.").optional(), "employment_end_date": z.string().nullable().describe("An End Date is the date that the employee ended working at the company").optional(), "employment_role": z.object({ "sub_type": z.enum(["full_time","part_time","hourly"]).nullable().describe("The work schedule of the employee.").optional(), "type": z.enum(["contractor","employee","freelance","temp","internship","other"]).nullable().describe("The type of employment relationship the employee has with the organization.").optional() }).optional(), "employment_start_date": z.string().nullable().describe("A Start Date is the date that the employee started working at the company").optional(), "employment_status": z.enum(["active","inactive","terminated","other"]).nullable().describe("The employment status of the employee, indicating whether they are currently employed, inactive, terminated, or in another status.").optional(), "first_name": z.string().nullable().describe("The first name of the person.").optional(), "food_allergies": z.array(z.string()).nullable().describe("Indicate the employee's food allergies.").optional(), "gender": z.enum(["male","female","unisex","other","not_specified"]).nullable().describe("The gender represents the gender identity of a person.").optional(), "id": z.string().describe("A unique identifier for an object.").readonly(), "initials": z.string().nullable().describe("The initials of the person, usually derived from their first, middle, and last names.").optional(), "jobs": z.array(z.object({ "compensation_rate": z.number().describe("The rate of pay for the employee in their current job role.").optional(), "currency": z.enum(["UNKNOWN_CURRENCY","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BOV","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHE","CHF","CHW","CLF","CLP","CNY","COP","COU","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MXV","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SSP","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRC","TRY","TTD","TWD","TZS","UAH","UGX","USD","USN","USS","UYI","UYU","UZS","VEF","VND","VUV","WST","XAF","XAG","XAU","XBA","XBB","XBC","XBD","XCD","XDR","XOF","XPD","XPF","XPT","XTS","XXX","YER","ZAR","ZMK","ZMW","BTC","ETH"]).nullable().describe("Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).").optional(), "employee_id": z.string().describe("A unique identifier for an object.").readonly().optional(), "end_date": z.string().date().nullable().describe("The date on which the employee leaves or is expected to leave their current job role.").optional(), "hired_at": z.string().date().nullable().describe("The date on which the employee was hired by the organization").optional(), "id": z.string().describe("A unique identifier for an object.").readonly().optional(), "is_primary": z.boolean().nullable().describe("Indicates whether this the employee's primary job.").optional(), "location": z.object({ "city": z.string().nullable().describe("Name of city.").optional(), "contact_name": z.string().nullable().optional(), "country": z.string().nullable().describe("country code according to ISO 3166-1 alpha-2.").optional(), "county": z.string().nullable().describe("Address field that holds a sublocality, such as a county").optional(), "email": z.string().nullable().optional(), "fax": z.string().nullable().optional(), "id": z.string().nullable().optional(), "latitude": z.string().nullable().optional(), "line1": z.string().nullable().describe("Line 1 of the address e.g. number, street, suite, apt #, etc.").optional(), "line2": z.string().nullable().describe("Line 2 of the address").optional(), "line3": z.string().nullable().describe("Line 3 of the address").optional(), "line4": z.string().nullable().describe("Line 4 of the address").optional(), "longitude": z.string().nullable().optional(), "name": z.string().nullable().optional(), "phone_number": z.string().nullable().optional(), "postal_code": z.string().nullable().describe("Zip code or equivalent.").optional(), "row_version": z.string().nullable().describe("A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.").optional(), "salutation": z.string().nullable().optional(), "state": z.string().nullable().describe("Name of state").optional(), "street_number": z.string().nullable().describe("Street number").optional(), "string": z.string().nullable().optional(), "type": z.enum(["primary","secondary","home","office","shipping","billing","other"]).optional(), "website": z.string().nullable().optional() }).strict().optional(), "payment_unit": z.enum(["hour","week","month","year","paycheck"]).describe("Unit of measurement for employee compensation.").optional(), "role": z.string().nullable().describe("The position and responsibilities of the person within the organization.").optional(), "start_date": z.string().date().nullable().describe("The date on which the employee starts working in their current job role.").optional(), "title": z.string().nullable().describe("The job title of the person.").optional() })).optional(), "languages": z.array(z.string().nullable().describe("language code according to ISO 639-1. For the United States - EN")).optional(), "last_name": z.string().nullable().describe("The last name of the person.").optional(), "leaving_reason": z.enum(["dismissed","resigned","redundancy","other"]).nullable().describe("The reason because the employment ended.").optional(), "manager": z.object({ "email": z.string().email().nullable().describe("The email address of the manager.").optional(), "employment_status": z.enum(["active","inactive","terminated","other"]).nullable().describe("The employment status of the employee, indicating whether they are currently employed, inactive, terminated, or in another status.").optional(), "first_name": z.string().nullable().describe("The first name of the person.").optional(), "id": z.string().describe("A unique identifier for an object.").readonly().optional(), "last_name": z.string().nullable().describe("The last name of the person.").optional(), "name": z.string().nullable().describe("The name of the manager, often a combination of their first and last names.").optional() }).optional(), "marital_status": z.string().nullable().describe("The marital status of the employee.").optional(), "middle_name": z.string().nullable().describe("Middle name of the person.").optional(), "nationalities": z.array(z.string().nullable().describe("The nationality of the person, represented as a two-letter country code according to ISO 3166-1 alpha-2.")).optional(), "partner": z.object({ "birthday": z.string().date().nullable().optional(), "deceased_on": z.string().date().nullable().optional(), "first_name": z.string().nullable().describe("The first name of the person.").optional(), "gender": z.enum(["male","female","unisex","other","not_specified"]).nullable().describe("The gender represents the gender identity of a person.").optional(), "id": z.string().describe("A unique identifier for an object.").readonly().optional(), "initials": z.string().nullable().optional(), "last_name": z.string().nullable().describe("The last name of the person.").optional(), "middle_name": z.string().nullable().describe("Middle name of the person.").optional() }).strict().optional(), "phone_numbers": z.array(z.object({ "area_code": z.string().nullable().optional(), "country_code": z.string().nullable().optional(), "extension": z.string().nullable().optional(), "id": z.string().nullable().optional(), "number": z.string().min(1), "type": z.enum(["primary","secondary","home","work","office","mobile","assistant","fax","direct-dial-in","personal","other"]).optional() }).strict()).optional(), "photo_url": z.string().nullable().describe("The URL of the photo of a person.").optional(), "preferred_language": z.string().nullable().describe("language code according to ISO 639-1. For the United States - EN").optional(), "preferred_name": z.string().nullable().describe("The name the employee prefers to be addressed by, which may be different from their legal name.").optional(), "pronouns": z.string().nullable().describe("The preferred pronouns of the person.").optional(), "record_url": z.string().nullable().optional(), "row_version": z.string().nullable().describe("A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.").optional(), "salutation": z.string().nullable().describe("A formal salutation for the person. For example, 'Mr', 'Mrs'").optional(), "social_links": z.array(z.object({ "id": z.string().nullable().optional(), "type": z.string().nullable().optional(), "url": z.string().min(1) }).strict()).optional(), "social_security_number": z.string().nullable().describe("A unique identifier assigned by the government. This field is considered sensitive information and may be subject to special security and privacy restrictions.").optional(), "source": z.string().nullable().describe("When the employee is imported as a new hire, this field indicates what system (e.g. the name of the ATS) this employee was imported from.").optional(), "source_id": z.string().nullable().describe("Unique identifier of the employee in the system this employee was imported from (e.g. the ID in the ATS).").optional(), "tags": z.array(z.string()).optional(), "tax_code": z.string().nullable().optional(), "tax_id": z.string().nullable().optional(), "team": z.object({ "id": z.string().nullable().describe("The unique identifier of the team.").optional(), "name": z.string().nullable().describe("The name of the team.").optional() }).strict().nullable().describe("The team the person is currently in.").optional(), "timezone": z.string().nullable().describe("The time zone related to the resource. The value is a string containing a standard time zone identifier, e.g. Europe/London.").optional(), "title": z.string().nullable().describe("The job title of the person.").optional(), "updated_at": z.string().datetime({ offset: true }).nullable().describe("The date and time when the object was last updated.").readonly().optional(), "updated_by": z.string().nullable().describe("The user who last updated the object.").readonly().optional(), "works_remote": z.boolean().nullable().describe("Indicates if the employee works from a remote location.").optional() }).strict().optional() }).shape