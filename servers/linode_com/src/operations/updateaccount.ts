import { z } from "zod"

export const toolName = `updateaccount`
export const toolDescription = `Account Update`
export const baseUrl = `https://api.linode.com/v4`
export const path = `/account`
export const method = `put`
export const security = [
  {
    "key": "Authorization",
    "value": "Bearer <mcp-env-var>API_KEY</mcp-env-var>",
    "in": "header",
    "envVarName": "API_KEY",
    "schemeType": "http",
    "schemeScheme": "bearer"
  },
  {
    "key": "Authorization",
    "value": "Bearer <mcp-env-var>OAUTH2_TOKEN</mcp-env-var>",
    "in": "header",
    "envVarName": "OAUTH2_TOKEN",
    "schemeType": "oauth2"
  }
]

export const inputParams = z.object({ "body": z.object({ "active_promotions": z.array(z.object({ "credit_monthly_cap": z.string().describe("The amount available to spend per month.\n").optional(), "credit_remaining": z.string().describe("The total amount of credit left for this promotion.\n").optional(), "description": z.string().describe("A detailed description of this promotion.\n").optional(), "expire_dt": z.string().describe("When this promotion's credits expire.\n").optional(), "image_url": z.string().describe("The location of an image for this promotion.\n").optional(), "service_type": z.enum(["all","backup","blockstorage","db_mysql","ip_v4","linode","linode_disk","linode_memory","longview","managed","nodebalancer","objectstorage","transfer_tx"]).describe("The service to which this promotion applies.\n").optional(), "summary": z.string().describe("Short details of this promotion.\n").optional(), "this_month_credit_remaining": z.string().describe("The amount of credit left for this month for this promotion.\n").optional() }).describe("Promotions generally\noffer a set amount of credit that can be used toward your Linode\nservices, and the promotion expires after a specified date. As well,\na monthly cap on the promotional offer is set.\n\nSimply put, a promotion offers a certain amount of credit every\nmonth, until either the expiration date is passed, or until the total\npromotional credit is used, whichever comes first.\n").readonly()).readonly().optional(), "active_since": z.string().datetime({ offset: true }).describe("The datetime of when the account was activated.").readonly().optional(), "address_1": z.string().max(64).describe("First line of this Account's billing address.").optional(), "address_2": z.string().max(64).describe("Second line of this Account's billing address.").optional(), "balance": z.number().describe("This Account's balance, in US dollars.").readonly().optional(), "balance_uninvoiced": z.number().describe("This Account's current estimated invoice in US dollars. This is not your final invoice balance. Transfer charges are not included in the estimate.\n").readonly().optional(), "billing_source": z.enum(["akamai","linode"]).describe("The source of service charges for this Account, as determined by its relationship with Akamai.\nAccounts that are associated with Akamai-specific customers return a value of `akamai`.\nAll other Accounts return a value of `linode`.\n").readonly().optional(), "capabilities": z.array(z.string()).describe("A list of capabilities your account supports.\n").readonly().optional(), "city": z.string().max(24).describe("The city for this Account's billing address.").optional(), "company": z.string().max(128).describe("The company name associated with this Account.").optional(), "country": z.string().describe("The two-letter ISO 3166 country code of this Account's billing address.\n").optional(), "credit_card": z.object({ "expiry": z.string().describe("The expiration month and year of the credit card.").optional(), "last_four": z.string().describe("The last four digits of the credit card associated with this Account.\n").optional() }).describe("Credit Card information associated with this Account.").readonly().optional(), "email": z.string().max(128).describe("The email address of the person associated with this Account.").optional(), "euuid": z.string().uuid().describe("An external unique identifier for this account.\n").readonly().optional(), "first_name": z.string().max(50).describe("The first name of the person associated with this Account.").optional(), "last_name": z.string().max(50).describe("The last name of the person associated with this Account.").optional(), "phone": z.string().max(32).describe("The phone number associated with this Account.").optional(), "state": z.string().max(24).describe("If billing address is in the United States (US) or Canada (CA), only the two-letter ISO 3166 State or Province code are accepted. If entering a US military address, state abbreviations (AA, AE, AP) should be entered. If the address is outside the US or CA, this is the Province associated with the Account's billing address.\n").optional(), "tax_id": z.string().max(25).describe("The tax identification number associated with this Account, for tax calculations in some countries. If you do not live in a country that collects tax, this should be an empty string (`\"\"`).\n").optional(), "zip": z.string().describe("The zip code of this Account's billing address. The following restrictions apply:\n\n- May only consist of letters, numbers, spaces, and hyphens.\n- Must not contain more than 9 letter or number characters.\n").optional() }).describe("Account object").optional() }).shape