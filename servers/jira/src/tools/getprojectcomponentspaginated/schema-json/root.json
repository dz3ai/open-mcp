{
  "type": "object",
  "properties": {
    "projectIdOrKey": {
      "description": "The project ID or project key (case sensitive).",
      "type": "string"
    },
    "startAt": {
      "description": "The index of the first item to return in a page of results (page offset).",
      "default": 0,
      "format": "int64",
      "type": "integer"
    },
    "maxResults": {
      "description": "The maximum number of items to return per page.",
      "default": 50,
      "format": "int32",
      "type": "integer"
    },
    "orderBy": {
      "description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by the component description.\n *  `issueCount` Sorts by the count of issues associated with the component.\n *  `lead` Sorts by the user key of the component's project lead.\n *  `name` Sorts by component name.",
      "enum": [
        "description",
        "-description",
        "+description",
        "issueCount",
        "-issueCount",
        "+issueCount",
        "lead",
        "-lead",
        "+lead",
        "name",
        "-name",
        "+name"
      ],
      "type": "string"
    },
    "componentSource": {
      "description": "The source of the components to return. Can be `jira` (default), `compass` or `auto`. When `auto` is specified, the API will return connected Compass components if the project is opted into Compass, otherwise it will return Jira components. Defaults to `jira`.",
      "default": "jira",
      "enum": [
        "jira",
        "compass",
        "auto"
      ],
      "type": "string"
    },
    "query": {
      "description": "Filter the results using a literal string. Components with a matching `name` or `description` are returned (case insensitive).",
      "type": "string"
    }
  },
  "required": [
    "projectIdOrKey"
  ]
}