import { z } from "zod";
export const toolName = `createapplication`;
export const toolDescription = `Create Application`;
export const baseUrl = `https://api.nexmo.com/v1/applications`;
export const path = `/`;
export const method = `post`;
export const security = [];
export const inputParams = z.object({ "body": z.object({ "answer_method": z.string().describe("The HTTP method used to make the request to `answer_url`. The default value is `GET`.").optional(), "answer_url": z.string().describe("The URL where your webhook delivers the Nexmo Call Control Object that governs this call. As soon as your user answers a call Nexmo makes a request to `answer_url`. Required for inbound calls only.").optional(), "api_key": z.string().describe("You can find your API key in your [account overview](https://dashboard.nexmo.com/account-overview)"), "api_secret": z.string().describe("You can find your API secret in your [account overview](https://dashboard.nexmo.com/account-overview)"), "event_method": z.string().describe("The HTTP method used to send event information to `event_url`. The default value is `POST`. For `voice` type applications only.").optional(), "event_url": z.string().describe("Nexmo sends event information asynchronously to this URL when status changes for `voice` applications. Always required for `voice` applications.").optional(), "inbound_method": z.string().describe("The HTTP method used to send event information to `inbound_url`. The default value is `POST`. For `messages` type applications only.").optional(), "inbound_url": z.string().describe("Nexmo sends a request to this URL when an inbound message is received. Required for `messages` type applications only.").optional(), "name": z.string().describe("The name of your application."), "status_method": z.string().describe("The HTTP method used to send event information to `status_url`. The default value is `POST`. For `messages` type applications only.").optional(), "status_url": z.string().describe("Nexmo sends event information asynchronously to this URL when status changes. Required for `messages` type applications only.").optional(), "type": z.enum(["voice", "messages"]).describe("The Nexmo product or products that you access with this application. Currently `voice` and `messages` application types are supported.") }).optional() }).shape;
