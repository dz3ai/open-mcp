export { inputParams } from "./schema/root.js"

export const toolName = `put_admin_realms_realm_`
export const toolDescription = `Update the top-level information of the realm Any user, roles or client information in the representation will be ignored.`
export const baseUrl = `https://api.example.com`
export const path = `/admin/realms/{realm}`
export const method = `put`
export const security = []
export const keys = {
  "query": [],
  "header": [],
  "path": [],
  "cookie": [],
  "body": [
    "id",
    "realm",
    "displayName",
    "displayNameHtml",
    "notBefore",
    "defaultSignatureAlgorithm",
    "revokeRefreshToken",
    "refreshTokenMaxReuse",
    "accessTokenLifespan",
    "accessTokenLifespanForImplicitFlow",
    "ssoSessionIdleTimeout",
    "ssoSessionMaxLifespan",
    "ssoSessionIdleTimeoutRememberMe",
    "ssoSessionMaxLifespanRememberMe",
    "offlineSessionIdleTimeout",
    "offlineSessionMaxLifespanEnabled",
    "offlineSessionMaxLifespan",
    "clientSessionIdleTimeout",
    "clientSessionMaxLifespan",
    "clientOfflineSessionIdleTimeout",
    "clientOfflineSessionMaxLifespan",
    "accessCodeLifespan",
    "accessCodeLifespanUserAction",
    "accessCodeLifespanLogin",
    "actionTokenGeneratedByAdminLifespan",
    "actionTokenGeneratedByUserLifespan",
    "oauth2DeviceCodeLifespan",
    "oauth2DevicePollingInterval",
    "enabled",
    "sslRequired",
    "registrationAllowed",
    "registrationEmailAsUsername",
    "rememberMe",
    "verifyEmail",
    "loginWithEmailAllowed",
    "duplicateEmailsAllowed",
    "resetPasswordAllowed",
    "editUsernameAllowed",
    "bruteForceProtected",
    "permanentLockout",
    "maxTemporaryLockouts",
    "bruteForceStrategy",
    "maxFailureWaitSeconds",
    "minimumQuickLoginWaitSeconds",
    "waitIncrementSeconds",
    "quickLoginCheckMilliSeconds",
    "maxDeltaTimeSeconds",
    "failureFactor",
    "roles",
    "groups",
    "defaultRole",
    "adminPermissionsClient",
    "defaultGroups",
    "passwordPolicy",
    "otpPolicyType",
    "otpPolicyAlgorithm",
    "otpPolicyInitialCounter",
    "otpPolicyDigits",
    "otpPolicyLookAheadWindow",
    "otpPolicyPeriod",
    "otpPolicyCodeReusable",
    "otpSupportedApplications",
    "localizationTexts",
    "webAuthnPolicyRpEntityName",
    "webAuthnPolicySignatureAlgorithms",
    "webAuthnPolicyRpId",
    "webAuthnPolicyAttestationConveyancePreference",
    "webAuthnPolicyAuthenticatorAttachment",
    "webAuthnPolicyRequireResidentKey",
    "webAuthnPolicyUserVerificationRequirement",
    "webAuthnPolicyCreateTimeout",
    "webAuthnPolicyAvoidSameAuthenticatorRegister",
    "webAuthnPolicyAcceptableAaguids",
    "webAuthnPolicyExtraOrigins",
    "webAuthnPolicyPasswordlessRpEntityName",
    "webAuthnPolicyPasswordlessSignatureAlgorithms",
    "webAuthnPolicyPasswordlessRpId",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment",
    "webAuthnPolicyPasswordlessRequireResidentKey",
    "webAuthnPolicyPasswordlessUserVerificationRequirement",
    "webAuthnPolicyPasswordlessCreateTimeout",
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister",
    "webAuthnPolicyPasswordlessAcceptableAaguids",
    "webAuthnPolicyPasswordlessExtraOrigins",
    "clientProfiles",
    "clientPolicies",
    "users",
    "federatedUsers",
    "scopeMappings",
    "clientScopeMappings",
    "clients",
    "clientScopes",
    "defaultDefaultClientScopes",
    "defaultOptionalClientScopes",
    "browserSecurityHeaders",
    "smtpServer",
    "userFederationProviders",
    "userFederationMappers",
    "loginTheme",
    "accountTheme",
    "adminTheme",
    "emailTheme",
    "eventsEnabled",
    "eventsExpiration",
    "eventsListeners",
    "enabledEventTypes",
    "adminEventsEnabled",
    "adminEventsDetailsEnabled",
    "identityProviders",
    "identityProviderMappers",
    "protocolMappers",
    "components",
    "internationalizationEnabled",
    "supportedLocales",
    "defaultLocale",
    "authenticationFlows",
    "authenticatorConfig",
    "requiredActions",
    "browserFlow",
    "registrationFlow",
    "directGrantFlow",
    "resetCredentialsFlow",
    "clientAuthenticationFlow",
    "dockerAuthenticationFlow",
    "firstBrokerLoginFlow",
    "attributes",
    "keycloakVersion",
    "userManagedAccessAllowed",
    "organizationsEnabled",
    "organizations",
    "verifiableCredentialsEnabled",
    "adminPermissionsEnabled",
    "oAuth2DeviceCodeLifespan",
    "oAuth2DevicePollingInterval"
  ]
}
export const flatMap = {}