import { z } from "zod"

export const toolName = `put_folders_id`
export const toolDescription = `Update folder`
export const baseUrl = `https://api.box.com/2.0`
export const path = `/folders/{folder_id}`
export const method = `put`
export const security = [
  {
    "key": "Authorization",
    "value": "Bearer <mcp-env-var>OAUTH2_TOKEN</mcp-env-var>",
    "in": "header",
    "envVarName": "OAUTH2_TOKEN",
    "schemeType": "oauth2"
  }
]

export const inputParams = z.object({ "path": z.object({ "folder_id": z.string().describe("The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.") }).optional(), "query": z.object({ "fields": z.array(z.string()).describe("A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.").optional() }).optional(), "header": z.object({ "if-match": z.string().describe("Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.").optional() }).optional(), "body": z.object({ "can_non_owners_invite": z.boolean().describe("Specifies if users who are not the owner\nof the folder can invite new collaborators to the folder.").optional(), "can_non_owners_view_collaborators": z.boolean().describe("Restricts collaborators who are not the owner of\nthis folder from viewing other collaborations on\nthis folder.\n\nIt also restricts non-owners from inviting new\ncollaborators.\n\nWhen setting this field to `false`, it is required\nto also set `can_non_owners_invite_collaborators` to\n`false` if it has not already been set.").optional(), "collections": z.array(z.object({ "id": z.string().describe("The unique identifier for this object").optional(), "type": z.string().describe("The type for this object").optional() }).describe("The bare basic reference for an object")).describe("An array of collections to make this folder\na member of. Currently\nwe only support the `favorites` collection.\n\nTo get the ID for a collection, use the\n[List all collections][1] endpoint.\n\nPassing an empty array `[]` or `null` will remove\nthe folder from all collections.\n\n[1]: ../advanced-files-and-folders/#get-collections").optional(), "description": z.string().max(256).describe("The optional description of this folder").optional(), "folder_upload_email": z.string().optional(), "is_collaboration_restricted_to_enterprise": z.boolean().describe("Specifies if new invites to this folder are restricted to users\nwithin the enterprise. This does not affect existing\ncollaborations.").optional(), "name": z.string().describe("The optional new name for this folder.").optional(), "parent": z.object({ "id": z.string().describe("The ID of the new parent folder").optional() }).describe("The parent folder for this folder. Use this to move\nthe folder or to restore it out of the trash.").optional(), "shared_link": z.string().optional(), "sync_state": z.enum(["synced","not_synced","partially_synced"]).describe("Specifies whether a folder should be synced to a\nuser's device or not. This is used by Box Sync\n(discontinued) and is not used by Box Drive.").optional(), "tags": z.array(z.string()).min(1).max(100).describe("The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\n\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise.").optional() }).optional() }).shape